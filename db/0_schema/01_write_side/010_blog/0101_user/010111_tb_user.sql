CREATE SCHEMA IF NOT EXISTS blog;

CREATE TABLE blog.tb_user (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    pk_user UUID DEFAULT gen_random_uuid() NOT NULL,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) NOT NULL,
    password_hash VARCHAR(255) NOT NULL,
    first_name VARCHAR(100),
    last_name VARCHAR(100),
    bio TEXT,
    avatar_url VARCHAR(500),
    is_active BOOLEAN DEFAULT true,
    is_verified BOOLEAN DEFAULT false,

    -- Audit fields
    created_at TIMESTAMPTZ NOT NULL DEFAULT now(),
    created_by UUID,
    updated_at TIMESTAMPTZ NOT NULL DEFAULT now(),
    updated_by UUID,
    deleted_at TIMESTAMPTZ,
    deleted_by UUID,

    CONSTRAINT tb_user_username_key UNIQUE (username),
    CONSTRAINT tb_user_email_key UNIQUE (email),
    CONSTRAINT tb_user_pk_user_key UNIQUE (pk_user)
);

-- Documentation
COMMENT ON TABLE blog.tb_user IS '[Table: 010111 | Write-Side.Blog.User] Stores user account information for the blog platform.';
COMMENT ON COLUMN blog.tb_user.id IS 'Internal numeric primary key. Not used in joins.';
COMMENT ON COLUMN blog.tb_user.pk_user IS 'Public UUID used for joins and external references.';
COMMENT ON COLUMN blog.tb_user.username IS 'Unique username for login and display.';
COMMENT ON COLUMN blog.tb_user.email IS 'User email address, must be unique.';
COMMENT ON COLUMN blog.tb_user.password_hash IS 'Hashed password using bcrypt or similar.';
COMMENT ON COLUMN blog.tb_user.first_name IS 'User first name for display.';
COMMENT ON COLUMN blog.tb_user.last_name IS 'User last name for display.';
COMMENT ON COLUMN blog.tb_user.bio IS 'User biography/description text.';
COMMENT ON COLUMN blog.tb_user.avatar_url IS 'URL to user avatar image.';
COMMENT ON COLUMN blog.tb_user.is_active IS 'Whether the user account is active.';
COMMENT ON COLUMN blog.tb_user.is_verified IS 'Whether the user email has been verified.';
COMMENT ON COLUMN blog.tb_user.created_at IS 'Timestamp when the record was created.';
COMMENT ON COLUMN blog.tb_user.created_by IS 'UUID of the user or system that created the record.';
COMMENT ON COLUMN blog.tb_user.updated_at IS 'Timestamp when the record was last updated.';
COMMENT ON COLUMN blog.tb_user.updated_by IS 'UUID of the user or system that last updated the record.';
COMMENT ON COLUMN blog.tb_user.deleted_at IS 'Timestamp when the record was soft-deleted, if applicable.';
COMMENT ON COLUMN blog.tb_user.deleted_by IS 'UUID of the user or system who deleted the record.';
